[include]
	path = ~/.config/git/local.conf

[init]
	defaultBranch = master

[core]
	hooksPath = ~/.config/git/hooks

[push]
	default = simple
	autoSetupRemote = true

[fetch]
	prune = true

[color "branch"]
	current = yellow reverse

[color "diff"]
	whitespace = red reverse

[alias]
	cp = cherry-pick

	wdiff = diff --word-diff
	pushf = push --force-with-lease --force-if-includes
	rc = rebase --continue
	ds = diff --staged
	rs = restore --staged

	# https://stackoverflow.com/a/20609719
	big-objects = !git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | less
	# https://stackoverflow.com/a/48590251
	find-object = log --find-object


	lc = log --pretty=fuller --relative-date --show-signature
	plog = log --pretty=oneline --abbrev-commit --check

	pwd = !pwd
	web = !xdg-open $(git remote get-url origin)

	# rebase merge base
	rmb = !git rebase --rebase-merges -i $(git merge-base HEAD $(git master))
	# diff merge base
	dmb = !git diff $(git merge-base HEAD $(git master))
	# diff master
	dm = !git diff $(git master)..HEAD
	# diff upstream
	du = !git diff @{u}
	# default branch
	master = !basename $(git rev-parse --abbrev-ref origin/HEAD)

	# https://stackoverflow.com/a/3338774
	ahead = log --branches --not --remotes --simplify-by-decoration --graph --oneline
	# https://stackoverflow.com/a/35075021
	adog = log --decorate --oneline --graph

	# lists all commits since it diverged from master. graph if the origin branch diverged.
	lpr = !git log --oneline --graph $(git rev-parse --abbrev-ref @{u} 2>/dev/null) $(git merge-base origin/$(git master) HEAD)..HEAD

	ff = merge --ff-only @{upstream}
	fix = commit -p --amend --no-edit
	recover-commit = !git commit -e -m \"$(cat .git/COMMIT_EDITMSG)\"

[grep]
	lineNumber = true

[commit]
	gpgsign = false
	verbose = true
